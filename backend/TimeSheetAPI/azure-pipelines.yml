name: $(majorMinorVersion).$(semanticVersion)

trigger:
  branches:
    include:
    - master
    - test
    - development
  paths:
    include:
    - '*'

variables:
  vmImageName: 'ubuntu-latest'

  # Container registry
  dockerRegistryServiceConnection: 'oppo-cb-cn-global-acr-service-connection'
  imageRepository: 'operations-portal'

  # Build
  dockerfilePath: '$(Build.SourcesDirectory)/**/dockerfile'
  tag: '$(majorMinorVersion).$(semanticVersion)'
  majorMinorVersion: 1.0
  semanticVersion: $[counter(variables['majorMinorVersion'], 0)]

  # Publish
  project: timesheet-api


pool:
  vmImage: $(vmImageName)

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build job
    steps:
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: $(dockerRegistryServiceConnection)
    - task: Docker@2
      displayName: Build
      inputs:
        command: build
        repository: $(project)
        dockerfile: $(dockerfilePath)
        tags: $(tag)
        # arguments: --build-arg NUGET_FEED_PAT="$(VSS_NUGET_ACCESSTOKEN)
    - task: Docker@2
      displayName: Push
      inputs:
        command: push
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(project)
        tags: $(tag)
  - job: Publish
    dependsOn: Build
    steps:
    - bash: |
        artifactContent=$(jq -n --arg project "$(project)" --arg tag "$(tag)" '{project: $project, tag: $tag}')
        echo "$artifactContent" > $(Build.ArtifactStagingDirectory)/artifact.json

      displayName: 'Create Artifact JSON File'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/artifact.json'
        ArtifactName: 'timesheet-api-pipeline-artifact'
      displayName: 'Publish Artifact'
